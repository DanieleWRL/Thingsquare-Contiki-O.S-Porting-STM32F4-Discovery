ifndef IAR
$(warning GCC compiler is not supported for this platform, use IAR instead (set IAR=1))
endif

# Default Mist apps
PLATFORMAPPS += aes multichan drowsie drowsie-multichannel

CONTIKI_TARGET_DIRS = . dev apps net dev/sdk dev/spirit1 \
		STM32F4xx_StdPeriph_Driver STM32F4xx_StdPeriph_Driver/inc STM32F4xx_StdPeriph_Driver/src STM32F4-Discovery

ARCH_CONTIKI += leds.c leds-arch.c node-id.c rimestats.c
# uart1x.c lcd.c spix.c hal_lcd.c hal_lcd_fonts.c cfs-ram.c hal-pmm.c

# board and CPU (unfortunately here, should be moved to CPU folder) drivers stm32f4xx_flash_ramfunc.c  
ARCH_STDPERIPH =      misc.c                      \
                      stm32f4xx_adc.c             \
					  stm32f4xx_can.c			  \
                      stm32f4xx_crc.c             \
					  stm32f4xx_cryp.c			  \
					  stm32f4xx_cryp_aes.c			  \
					  stm32f4xx_cryp_des.c			  \
					  stm32f4xx_cryp_tdes.c			  \
                      stm32f4xx_dac.c             \
                      stm32f4xx_dbgmcu.c          \
					  stm32f4xx_dcmi.c          \
                      stm32f4xx_dma.c             \
                      stm32f4xx_exti.c            \
                      stm32f4xx_flash.c           \
                      stm32f4xx_gpio.c            \
					  stm32f4xx_hash.c          \
					  stm32f4xx_hash_md5.c          \
					  stm32f4xx_hash_sha1.c          \
                      stm32f4xx_i2c.c             \
                      stm32f4xx_it.c              \
                      stm32f4xx_iwdg.c            \
                      stm32f4xx_pwr.c             \
                      stm32f4xx_rcc.c             \
					  stm32f4xx_rng.c          \
                      stm32f4xx_rtc.c             \
                      stm32f4xx_spi.c             \
                      stm32f4xx_syscfg.c          \
                      stm32f4xx_systick.c         \
                      stm32f4xx_tim.c             \
                      stm32f4xx_usart.c           \
                      stm32f4xx_wwdg.c			\
					  stm32f4_discovery.c

# STEVAL SDK sources
ARCH_SDK =            SDK_EVAL_Button.c           \
                      SDK_EVAL_Com.c              \
                      SDK_EVAL_Led.c              \
                      SDK_EVAL_PM.c               \
                      SDK_EVAL_Spirit_Gpio.c      \
                      SDK_EVAL_Timers.c           \
                      SDK_EVAL_Spirit_Spi_Driver.c


# radio drivers
ARCH_RADIO_SOURCES=   spirit1-arch.c              \
                      spirit1.c                   \
                      SPIRIT_Aes.c                \
                      SPIRIT_Calibration.c        \
                      SPIRIT_Commands.c           \
                      SPIRIT_Csma.c               \
                      SPIRIT_DirectRF.c           \
                      SPIRIT_General.c            \
                      SPIRIT_Gpio.c               \
                      SPIRIT_Irq.c                \
                      SPIRIT_LinearFifo.c         \
                      SPIRIT_Management.c         \
                      SPIRIT_PktBasic.c           \
                      SPIRIT_PktCommon.c          \
                      SPIRIT_PktMbus.c            \
                      SPIRIT_PktStack.c           \
                      SPIRIT_Qi.c                 \
                      SPIRIT_Radio.c              \
                      SPIRIT_Timer.c              \
                      SPIRIT_Types.c

ARCH+=$(ARCH_CONTIKI)
ARCH+=$(ARCH_STDPERIPH)
ARCH+=$(ARCH_RADIO_SOURCES)
ARCH+=$(ARCH_SDK)

ifdef UIP_CONF_IPV6
CFLAGS += -DWITH_UIP6=1
endif

ifeq ($(WITH_SLIP),1)
ARCH += slip_uart1.c
else
#ARCH += uart1-putchar.c
endif

ifdef NODEID
CFLAGS+=-DNODEID=$(NODEID)
ifdef BURN_NODEID
CFLAGS+=-DBURN_NODEID
endif # BURN_NODEID
endif # NODEID

ifndef CONTIKI_TARGET_MAIN
CONTIKI_TARGET_MAIN = contiki-spirit1-main.c
endif

include $(CONTIKI)/cpu/arm/stm32f4xx/Makefile.stm32f4xx
CONTIKI_SOURCEFILES += $(ARCH)

# build rules ------------------------------------

CLEAN += *.mist-spirit1-F4 symbols.c symbols.h contiki-mist-spirit1-F4.log 

contiki-$(TARGET).a: ${addprefix $(OBJECTDIR)/,symbols.o}

help:
	@echo A few useful make commands:
	@echo make help - shows this help
	@echo make TARGET=mist-spirit1-F4 savetarget - stores selection of target to avoid using TARGET= on every make invokation
	@echo make program.upload - compiles and uploads program to connected board
	@echo make program.upload IAR=1 - uses the IAR compiler instead of mspgcc (not implemented yet)
	@echo make program.upload NODEID=x - uploads with node_id set to x

# Serialdump rules
ifeq ($(HOST_OS),Windows)
  SERIALDUMP = serialdump-windows
  # this ID is a string with which the node identifies itself as, and is used to
  # find the proper /dev/comX-port in Cygwin to connect to.
  CYGWIN_DEV_ID="STEVAL-IKR0001Vx SPIRIT Platform"
  include $(CONTIKI)/tools/cygwin/Makefile.cygwin
endif
ifeq ($(HOST_OS),Darwin)
  SERIALDUMP = serialdump-macos
endif
ifndef SERIALDUMP
  # Assume Linux
  SERIALDUMP = serialdump-linux
endif

# IAR/windows/cygwin only for now; after GCC port, see if stm32flash works with Linux
STLINKCLI=ST-LINK_CLI.exe
%.upload: %.hex
	#Note: this command only uploads to a single connected device
	$(STLINKCLI) -Q -P $*.hex -V -Run

login:
	@echo "Connecting to $(COMPORT)"
	$(CONTIKI)/tools/sky/$(SERIALDUMP) -b115200 $(COMPORT)
